diff.py is generated by Chat GPT with the prompt:
---


Please create a python script called diff.py that is executed with `python -m diff.main json_old json_new` and outputs the difference between json_old and json_new in Markdown format. The detailed specifications are as follows:

# Input Format:
json_old and json_new are both plain JSON strings where keys are strings, and values are objects in the format { cc: float, hal: float, sloc: float, mi_raw: float, mi_pct: float }. 
Since the input JSON strings may use a mix of single quotes (') and double quotes ("), you need to preprocess them to ensure all quotes are converted to double quotes (").

# Difference Calculation:
For keys that are present in both json_old and json_new, calculate the difference (json_new value - json_old value) for the fields cc, hal, sloc, and mi_raw.
If a key is present in only one of the JSONs, assume the value of the missing key is 0 during the calculation.

# Special Handling for mi_pct:
The mi_pct field should not be calculated as a difference. Instead, directly display the mi_pct value from json_new.
If a key is present only in json_old, leave the mi_pct column blank.

# Output Format:
If the diffs of cc, hal and sloc is all 0 (unchanged) then the record is skipped.
The output should be a Markdown table with the following columns:
```
| Key |  | diff cc | diff hal | diff sloc | diff mi_raw | new_mi_pct |.
```

The Key column displays the key from the JSONs. 
The second column displays if the file was Added (Add), Deleted (Del), or Updated (Upd) based on the presence of the key in json_old and json_new.
Columns diff cc, diff hal, diff sloc, and diff mi_raw display the calculated differences for each respective field.
The new_mi_pct column displays the mi_pct value from json_new. If a key only exists in json_old, this column should be left blank.

# Summary Row:
Add a summary row at the end of the Markdown table to show the total differences for cc, hal, sloc, and mi_raw. mi_pct should be blank.
Use **total** as the value in the Key column for this row.

# Output Formatting:
The entire output should be enclosed in a collapsible Markdown <details> tag with the following format:
```
<details>
<summary>Code Complexity Analytics</summary>

{ Output the Markdown table here. All the float values should be rounded to 1st decimal place }
</details>
```

This formatting ensures that the output is neatly presented in a compact format that can be expanded for detailed viewing.
