name: "Run Code Analysis and Comment on PR"
description: "Runs code analysis and comments the results on a pull request."
author: "Neural Group Inc."
inputs:
  token:
    description: "GitHub Token"
    required: true
  includes:
    description: |
      'List of files to include in the analysis as a comma-separated string.'
      "Example: 'dir1/**/*.py,dir2/**/*.{ts,tsx,js,jsx}'"
    required: true
  excludes:
    description: |
      "List of files to exclude from the analysis as a comma-separated string. "
      "Example: 'dir1/**/test_*.py,dir2/**/*test.{ts,tsx,js,jsx}'"
    default: ''
outputs:
  results_json:
    description: 'Code analysis results in json format.'
runs:
  using: "composite"
  steps:
    # TODO: register the docker image in Dockerhub
    - name: Check out the analyzer repository
      uses: actions/checkout@v3
      with:
        repository: neural-group/code-maintainability-reporter-action
        repo: /repo
    # TODO: register the docker image in Dockerhub
    - name: Build Docker container
      shell: bash
      run: |
        docker build -t code-maintainability-reporter -f /repo/Dockerfile /repo

    - name: Check out the repository
      uses: actions/checkout@v3
      with:
        repo: /target
        fetch-depth: 2 # Fetch both the source and target branch

    - name: Run complexity on target branch
      id: analysis_old
      run: |
        {
          echo 'results<<EOF'
          docker run -v /target:/target code-maintainability-reporter /target/${{ inputs.includes }} /target/${{ inputs.excludes }}
          echo EOF
        } >> "$GITHUB_OUTPUT"

    - name: Switch to source branch
      run: |
        cd /target
        git checkout ${{ github.event.pull_request.base.ref }}
        cd -

    - name: Run complexity on source branch
      id: analysis_new
      run: |
        {
          echo 'results<<EOF'
          docker run -v /target:/target code-maintainability-reporter /target/${{ inputs.includes }} /target/${{ inputs.excludes }}
          echo EOF
        } >> "$GITHUB_OUTPUT"

    - name: Get code complexity diff
      id: calc_diff
      run: |
        {
          echo 'results<<EOF'
          bash <(curl -Ls https://github.com/neural-group/code-maintainability-reporter-action/diff_json.sh) "${{ steps.analysis_old.outputs.results }}" "${{ steps.analysis_new.outputs.results }}"
          echo EOF
        } >> "$GITHUB_OUTPUT"
      continue-on-error: true

    - name: Create a PR comment with the complexity difference
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        message: | 
          <details>
          <summary>Code Complexity Analytics</summary>

          ${{ steps.calc_diff.outputs.results }}

          </details>
branding:
  icon: "microscope"
  color: "blue"
